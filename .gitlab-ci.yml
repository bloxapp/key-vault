stages:
  - lint
  - gosec
  - test
  - build
  - deploy

services:
  - 121827225315.dkr.ecr.us-west-2.amazonaws.com/infra-stage-repo:docker-dind

variables:
  #GLOBAL
  IMAGE_NAME: key-vault
  REPLICAS: "1"

  #STAGE
  ACCOUNT_ID_INFRA_STAGE: 121827225315
  AWS_REGION_INFRA_STAGE: "us-west-2"
  DOCKER_REPO_INFRA_STAGE: $ACCOUNT_ID_INFRA_STAGE.dkr.ecr.$AWS_REGION_INFRA_STAGE.amazonaws.com/$IMAGE_NAME
  APP_REPLICAS_INFRA_STAGE: "1"
  ECRLOGIN_INFRA_STAGE: "aws ecr get-login --registry-ids $ACCOUNT_ID_INFRA_STAGE --region $AWS_REGION_INFRA_STAGE --no-include-email"
  STAGE_GO_IMAGE: golang:1.17-bullseye

  #PRODUCTION
  ACCOUNT_ID_INFRA_PROD: 764289642555
  AWS_REGION_INFRA_PROD: "us-west-2"
  DOCKER_REPO_INFRA_PROD: $ACCOUNT_ID_INFRA_PROD.dkr.ecr.$AWS_REGION_INFRA_PROD.amazonaws.com/$IMAGE_NAME
  APP_REPLICAS_INFRA_PROD: "1"
  ECRLOGIN_INFRA_PROD: "aws ecr get-login --registry-ids $ACCOUNT_ID_INFRA_PROD --region $AWS_REGION_INFRA_PROD --no-include-email"
  PROD_GO_IMAGE: golang:1.17-bullseye

#blox-infra-stage
Run linter:
  stage: lint
  image: $STAGE_GO_IMAGE
  tags:
    - blox-infra-stage
  script:
    - go get -u golang.org/x/lint/golint
    - go get -u golang.org/x/tools/cmd/goimports
    - ./scripts/lint.sh .
  only:
    - stage

Security check:
  stage: gosec
  image: $STAGE_GO_IMAGE
  tags:
    - blox-infra-stage
  script:
    - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s v2.5.0
    - ./bin/gosec -exclude-dir e2e -exclude G402 ./...
  only:
    - stage

Run tests of the application:
  stage: test
  image: $STAGE_GO_IMAGE
  services:
    - 121827225315.dkr.ecr.us-west-2.amazonaws.com/infra-stage-repo:docker-dind
  tags:
    - blox-infra-stage
  script:
    - docker version
    - DOCKER_API_VERSION=1.39 go test -tags blst_enabled -timeout 20m -cover -race -p 1 ./...
  only:
    - stage

Build stage Docker image:
  stage: build
  tags:
    - blox-infra-stage
  script:
    - docker build -t $IMAGE_NAME:$CI_BUILD_REF -f Dockerfile .
    - DOCKER_LOGIN_TO_INFRA_STAGE_REPO=`$ECRLOGIN_INFRA_STAGE`
    - docker tag $IMAGE_NAME:$CI_BUILD_REF $DOCKER_REPO_INFRA_STAGE:$CI_BUILD_REF
    - $DOCKER_LOGIN_TO_INFRA_STAGE_REPO && docker push $DOCKER_REPO_INFRA_STAGE:$CI_BUILD_REF
  only:
    - stage

Deploy to blox-infra-stage cluster:
  stage: deploy
  tags:
    - blox-infra-stage
  script:
    - apk add bash
    - export K8S_API_VERSION=$INFRA_STAGE_K8_API_VERSION
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
    - chmod 755 kubectl
    - mv kubectl /usr/bin/
    - .k8/scripts/deploy-yamls-on-k8s.sh $DOCKER_REPO_INFRA_STAGE $CI_BUILD_REF validators $APP_REPLICAS_INFRA_STAGE blox-infra-stage kubernetes-admin@blox-infra stage.bloxinfra.com $K8S_API_VERSION
  only:
    - stage

#blox-infra-prod
Run prod linter:
  stage: lint
  image: $PROD_GO_IMAGE
  tags:
    - blox-infra-prod
  script:
    - go get -u golang.org/x/lint/golint
    - go get -u golang.org/x/tools/cmd/goimports
    - ./scripts/lint.sh .
  only:
    - master

Prod security check:
  stage: gosec
  image: $PROD_GO_IMAGE
  tags:
    - blox-infra-stage
  script:
    - curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s v2.5.0
    - ./bin/gosec -exclude-dir e2e -exclude G402 ./...
  only:
    - master

Run prod tests of the application:
  stage: test
  image: golang:1.17
  services:
    - docker:dind
  tags:
    - blox-infra-prod
  script:
    - DOCKER_API_VERSION=1.39 go test -tags blst_enabled -timeout 20m -cover -race -p 1 ./...
  only:
    - master

Build prod Docker image:
  stage: build
  tags:
    - blox-infra-prod
  script:
    - docker build -t $IMAGE_NAME:$CI_BUILD_REF -f Dockerfile .
    - DOCKER_LOGIN_TO_INFRA_PROD_REPO=`$ECRLOGIN_INFRA_PROD`
    - docker tag $IMAGE_NAME:$CI_BUILD_REF $DOCKER_REPO_INFRA_PROD:$CI_BUILD_REF
    - $DOCKER_LOGIN_TO_INFRA_PROD_REPO && docker push $DOCKER_REPO_INFRA_PROD:$CI_BUILD_REF
  only:
    - master

Deploy to blox-infra-prod cluster:
  stage: deploy
  tags:
    - blox-infra-prod
  script:
    - apk add bash
    - export K8S_API_VERSION=$INFRA_PROD_K8_API_VERSION
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
    - chmod 755 kubectl
    - mv kubectl /usr/bin/
    - .k8/scripts/deploy-yamls-on-k8s.sh $DOCKER_REPO_INFRA_PROD $CI_BUILD_REF validators $APP_REPLICAS_INFRA_PROD blox-infra-prod kubernetes-admin@blox-infra-prod bloxinfra.com $K8S_API_VERSION
  only:
    - master
